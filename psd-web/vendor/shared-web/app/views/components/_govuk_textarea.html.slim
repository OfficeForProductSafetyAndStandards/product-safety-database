/ Implementation based on
/ https://github.com/alphagov/govuk-frontend/
/ blob/943ff14752f0a8a765ee3f90bc3e1ecd9205e36c/src/components/textarea/template.njk
ruby:
  described_by = ""
  has_error = local_assigns[:errorMessage].present?
  rows = local_assigns[:rows] || 5

  form_group_classes = [local_assigns.dig(:formGroup, :classes)]
  form_group_classes.push "govuk-form-group--error" if local_assigns[:errorMessage]
  area_classes = ["govuk-textarea", local_assigns[:classes]]
  area_classes.push("govuk-textarea--error") if local_assigns[:errorMessage].present?

.govuk-form-group class=form_group_classes
  = render "components/govuk_label", for: id, **label

  - if local_assigns[:hint]
    - hint_id = local_assigns[:id] + '-hint'
    - described_by = described_by.present? ? described_by + ' ' + hint_id : hint_id
    = render "components/govuk_hint", id: hint_id, **local_assigns[:hint]

  - if has_error
    - error_id = local_assigns[:id] + '-error'
    - described_by = described_by.present? ? described_by + ' ' + error_id : error_id
    = render "components/govuk_error_message", id: error_id, **errorMessage

  textarea[*(local_assigns[:attributes] || {})
                class=area_classes
                id=id
                rows=rows
                name=name
                aria-describedby=described_by.presence
                autocomplete=local_assigns[:autocomplete]]
        / If the first new line of the textarea is empty, HTML swallows it, so here we add it back in. TODO check this
        / non-apply operating systems.
        = "\r\n"
        = local_assigns[:value]
