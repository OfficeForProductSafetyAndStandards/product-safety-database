name: Deploy to Production

on:
  release:
    types:
      - released

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.ref_name }}

    - name: Install cf client
      env:
        CF_CLI_VERSION: '7.7.15' 
      run: |
        mkdir -p $GITHUB_WORKSPACE/bin
        curl -A "" -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=${CF_CLI_VERSION}" | tar -zx -C $GITHUB_WORKSPACE/bin
        echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

    - name: Create GitHub deployment for Production
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: main
      run: |
        source deploy-github-functions.sh
        gh_deploy_create production

    - name: Initiate Production deployment status
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        source deploy-github-functions.sh

        log_url=$(echo "https://github.com/$GITHUB_REPOSITORY/actions?query=branch%3Amain+workflow%3ADeploy+Production")
        echo "LOG_URL=$log_url" >> $GITHUB_ENV

        gh_deploy_initiate production $log_url

    - name: Deploy to Production
      if: success()
      env:
        SPACE: prod
        APP_NAME: psd-web
        DOMAIN: www.product-safety-database.service.gov.uk
        DOMAIN_SUPPORT: support.product-safety-database.service.gov.uk
        DOMAIN_REPORT: report.product-safety-database.service.gov.uk
        WEB_DISK_QUOTA: 2.5G
        WORKER_DISK_QUOTA: 2.5G
        WEB_MEMORY: 4G
        WORKER_MEMORY: 4G
        WEB_INSTANCES: 4
        WORKER_INSTANCES: 2
        WEB_MAX_THREADS: 5
        WORKER_MAX_THREADS: 10
        CF_USERNAME: ${{ secrets.PaaSUsernameProduction }}
        CF_PASSWORD: ${{ secrets.PaaSPasswordProduction }}
        SENTRY_SERVICE_NAME: psd-sentry-env
      run: |
        cf api api.london.cloud.service.gov.uk
        cf auth
        cf target -o 'beis-opss' -s $SPACE
        ./deploy.sh
        cf logout

    - name: Update Production deployment status (success)
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        source deploy-github-functions.sh
        environment_url=https://www.product-safety-database.service.gov.uk/
        gh_deploy_success production $LOG_URL $environment_url

    - name: Update Production deployment status (failure)
      if: failure()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        source deploy-github-functions.sh
        gh_deploy_failure production $LOG_URL

    - name: Create Sentry release
      if: success()
      uses: getsentry/action-release@v2
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: opss
        SENTRY_PROJECT: beis-psd
      with:
        environment: prod

    - name: Set up Ruby
      if: success()
      uses: ruby/setup-ruby@v1

    - uses: actions/cache@v4
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-no-dev-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Install RubyGems
      if: success()
      run: |
        gem install bundler --no-doc
        bundle config path vendor/bundle
        bundle check || bundle install --without development --jobs=4 --retry=3

    - name: Run smoke tests
      if: success()
      env:
        SMOKE_USER: ${{secrets.SMOKE_USER}}
        SMOKE_PASSWORD: ${{secrets.SMOKE_PASSWORD}}
        SMOKE_RELAY_CODE_URL: ${{secrets.SMOKE_RELAY_CODE_URL}}
        SMOKE_RELAY_CODE_USER: ${{secrets.SMOKE_RELAY_CODE_USER}}
        SMOKE_RELAY_CODE_PASS: ${{secrets.SMOKE_RELAY_CODE_PASS}}
        IS_REVIEW_APP: "false"
        SMOKE_TEST_URL: "https://www.product-safety-database.service.gov.uk"
      run: |
        bundle exec rspec ./smoke_test/cases_page_without_2fa_spec.rb

    - name: Alert team via Slack of deployment failure
      if: failure()
      env:
        SLACK_WEBHOOK: ${{ secrets.SlackWebhookUrl }}
      run: |
        curl -X POST --data-urlencode "payload={\"channel\": \"#alerts\", \"username\": \"deploybot\", \"text\": \"Deploy has failed!\n\nSee $LOG_URL\", \"icon_emoji\": \":fire:\"}" $SLACK_WEBHOOK
