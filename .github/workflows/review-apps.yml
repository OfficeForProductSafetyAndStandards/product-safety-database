name: Review application

on: [pull_request]

env:
  PR_NUMBER: ${{ github.event.number }}

jobs:
  reviewapp:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Create GitHub deployment
      env:
        GITHUB_TOKEN: ${{ secrets.GithubApiDeploymentToken }}
        BRANCH: ${{ github.head_ref }}
      run: |
        source deploy-github-functions.sh
        gh_deploy_create review-app-${PR_NUMBER}

    - name: Initiate deployment status
      env:
        GITHUB_TOKEN: ${{ secrets.GithubApiDeploymentToken }}
      run: |
        source deploy-github-functions.sh

        # URL where the deployment progress can be tracked. Exported for future steps.
        log_url=$(echo "https://github.com/$GITHUB_REPOSITORY/pull/$PR_NUMBER/checks")
        echo "LOG_URL=$log_url" >> $GITHUB_ENV

        gh_deploy_initiate review-app-${PR_NUMBER} $log_url

    - name: Install cf client
      env:
        CF_CLI_VERSION: v7
      run: |
        mkdir -p $GITHUB_WORKSPACE/bin
        curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=${CF_CLI_VERSION}" | tar -zx -C $GITHUB_WORKSPACE/bin
        echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

    - name: Deploy
      env:
        SPACE: int
        CF_USERNAME: ${{ secrets.PaaSUsernameInt }}
        CF_PASSWORD: ${{ secrets.PaaSPasswordInt }}
        BRANCH: ${{ github.head_ref }}
        WEB_MAX_THREADS: 5
        WORKER_MAX_THREADS: 10
      run: |
        cf api api.london.cloud.service.gov.uk
        cf auth
        cf target -o 'beis-opss' -s $SPACE
        export APP_NAME=psd-pr-$PR_NUMBER
        export DB_NAME=psd-db-pr-$PR_NUMBER
        echo "Deploying review app. If fails, use command below to deploy manually:"
        echo "DB_NAME=$DB_NAME APP_NAME=$APP_NAME /deploy-review.sh"

        ./deploy-review.sh
        cf logout

    - name: Index seeds
      if: success()
      env:
        SPACE: int
        CF_USERNAME: ${{ secrets.PaaSUsernameInt }}
        CF_PASSWORD: ${{ secrets.PaaSPasswordInt }}
      run: |
        cf api api.london.cloud.service.gov.uk
        cf auth
        cf target -o 'beis-opss' -s $SPACE
        export APP_NAME=psd-pr-$PR_NUMBER
        cf run-task $APP_NAME -c "export \$(./env/get-env-from-vcap.sh) && rails elasticsearch:index" -k 2G

      - name: "Ruby"
        runs-on: ubuntu-latest

        # Example for can be found here:
        # https://github.com/actions/example-services/tree/master/.github/workflows
        services:
          postgres:
            image: postgres:11.5
            env:
              POSTGRES_USER: postgres
              POSTGRES_PASSWORD: ""
              POSTGRES_DB: postgres
            ports: ["5432:5432"]
            options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
          elasticsearch:
            image: elasticsearch:7.9.2
            ports: ["9200:9200"]
            options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
        steps:
        - uses: actions/checkout@v1

        - name: Set up Ruby
          uses: actions/setup-ruby@v1
          with:
            ruby-version: 2.7.x

        - name: Set up Node
          uses: actions/setup-node@v1
          with:
            node-version: 14.17.x
        # required to compile pg ruby gem
        - name: install PostgreSQL client
          run: sudo apt-get install libpq-dev

        - uses: actions/cache@v1
          with:
            path: vendor/bundle
            key: ${{ runner.os }}-gems-no-dev-${{ hashFiles('**/Gemfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-gems-

        - name: Install RubyGems
          run: |
            gem install bundler --no-doc
            bundle config path vendor/bundle
            bundle check || bundle install --without development --jobs=4 --retry=3

        - name: Install yarn
          run: npm install yarn -g

        - name: Get yarn cache
          id: yarn-cache
          run: echo "::set-output name=dir::$(yarn cache dir)"

        - uses: actions/cache@v1
          with:
            path: ${{ steps.yarn-cache.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-

        - name: Install Node.js dependencies
          run: yarn install

        - name: Prepare database
          run: bin/rails parallel:load_schema

        - name: Run Smoke Tests
          env:
            ELASTICSEARCH_URL: localhost
            RAILS_ENV: test
            SMOKE_USER: ${{secrets.SMOKE_USER}}
            SMOKE_PASSWORD: ${{secrets.SMOKE_PASSWORD}}
            SMOKE_RELAY_CODE_URL: ${{secrets.SMOKE_RELAY_CODE_URL}}
            SMOKE_RELAY_CODE_USER: ${{secrets.SMOKE_RELAY_CODE_USER}}
            SMOKE_RELAY_CODE_PASS: ${{secrets.SMOKE_RELAY_CODE_PASS}}
            RUN_SMOKE: "true"

          run: |
            bundle exec rspec spec/smoke/smoke_test_spec.rb

    - name: Index seeds
      if: success()
      env:
        SPACE: int
        CF_USERNAME: ${{ secrets.PaaSUsernameInt }}
        CF_PASSWORD: ${{ secrets.PaaSPasswordInt }}
      run: |
        cf api api.london.cloud.service.gov.uk
        cf auth
        cf target -o 'beis-opss' -s $SPACE
        export APP_NAME=psd-pr-$PR_NUMBER
        cf run-task $APP_NAME -c "export \$(./env/get-env-from-vcap.sh) && rails elasticsearch:index" -k 2G

    - name: Update deployment status (success)
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GithubApiDeploymentToken }}
      run: |
        source deploy-github-functions.sh

        environment_url=https://psd-pr-${PR_NUMBER}.london.cloudapps.digital/

        gh_deploy_success review-app-${PR_NUMBER} $LOG_URL $environment_url

    - name: Update deployment status (failure)
      if: failure()
      env:
        GITHUB_TOKEN: ${{ secrets.GithubApiDeploymentToken }}
      run: |
        source deploy-github-functions.sh
        gh_deploy_failure review-app-${PR_NUMBER} $LOG_URL
