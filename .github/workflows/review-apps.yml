name: Review application

on: [pull_request]

env:
  PR_NUMBER: ${{ github.event.number }}

jobs:
  reviewapp:
    name: Deploy
    runs-on: ubuntu-latest
    # Skip if it is a Dependabot created PR.
    # For security reasons they do not have write permissions to deploy or access to secrets.
    # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
    if: ${{ github.actor != 'dependabot[bot]' }}

    steps:
    - uses: actions/checkout@v1

    - name: Create GitHub deployment
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: ${{ github.head_ref }}
      run: |
        source deploy-github-functions.sh
        gh_deploy_create review-app-${PR_NUMBER}

    - name: Initiate deployment status
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        source deploy-github-functions.sh

        # URL where the deployment progress can be tracked. Exported for future steps.
        log_url=$(echo "https://github.com/$GITHUB_REPOSITORY/pull/$PR_NUMBER/checks")
        echo "LOG_URL=$log_url" >> $GITHUB_ENV

        gh_deploy_initiate review-app-${PR_NUMBER} $log_url

    - name: Install cf client
      env:
        CF_CLI_VERSION: v7
      run: |
        mkdir -p $GITHUB_WORKSPACE/bin
        curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=${CF_CLI_VERSION}" | tar -zx -C $GITHUB_WORKSPACE/bin
        echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

    - name: Deploy
      env:
        SPACE: int
        CF_USERNAME: ${{ secrets.PaaSUsernameInt }}
        CF_PASSWORD: ${{ secrets.PaaSPasswordInt }}
        BRANCH: ${{ github.head_ref }}
        WEB_MAX_THREADS: 5
        WORKER_MAX_THREADS: 10
      run: |
        cf api api.london.cloud.service.gov.uk
        cf auth
        cf target -o 'beis-opss' -s $SPACE
        export APP_NAME=psd-pr-$PR_NUMBER
        export DB_NAME=psd-db-pr-$PR_NUMBER
        echo "Deploying review app. If fails, use command below to deploy manually:"
        echo "DB_NAME=$DB_NAME APP_NAME=$APP_NAME /deploy-review.sh"

        ./deploy-review.sh
        cf logout

    - name: Index seeds
      if: success()
      env:
        SPACE: int
        CF_USERNAME: ${{ secrets.PaaSUsernameInt }}
        CF_PASSWORD: ${{ secrets.PaaSPasswordInt }}
      run: |
        cf api api.london.cloud.service.gov.uk
        cf auth
        cf target -o 'beis-opss' -s $SPACE
        export APP_NAME=psd-pr-$PR_NUMBER
        cf run-task $APP_NAME -c "bin/rails opensearch:index" --name add-opensearch-indexes -k 2G
        task_status=0; until [ $task_status = "SUCCEEDED" ]; do task_status="$(cf tasks psd-pr-$PR_NUMBER | grep add-opensearch-indexes | awk '{print $3}')" && if [ "$task_status" = "FAILED" ]; then break; else echo "waiting" && sleep 10; fi; done;

    - name: Update deployment status (success)
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        source deploy-github-functions.sh

        environment_url=https://psd-pr-${PR_NUMBER}.london.cloudapps.digital/

        gh_deploy_success review-app-${PR_NUMBER} $LOG_URL $environment_url

    - name: Update deployment status (failure)
      if: failure()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        source deploy-github-functions.sh
        gh_deploy_failure review-app-${PR_NUMBER} $LOG_URL

    - name: Set up Ruby
      if: success()
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 3.0.x

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-no-dev-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Install RubyGems
      if: success()
      run: |
        gem install bundler --no-doc
        bundle config path vendor/bundle
        bundle check || bundle install --without development --jobs=4 --retry=3

    - name: Run Smoke Tests
      if: success()
      env:
        SMOKE_USER: ${{secrets.SMOKE_USER}}
        SMOKE_PASSWORD: ${{secrets.SMOKE_PASSWORD}}
        SMOKE_RELAY_CODE_URL: ${{secrets.SMOKE_RELAY_CODE_URL}}
        SMOKE_RELAY_CODE_USER: ${{secrets.SMOKE_RELAY_CODE_USER}}
        SMOKE_RELAY_CODE_PASS: ${{secrets.SMOKE_RELAY_CODE_PASS}}
        IS_REVIEW_APP: "true"
        SMOKE_TEST_URL: https://psd-pr-${{ github.event.number }}.london.cloudapps.digital
        SMOKE_TEST_REVIEW_APP_BASIC_AUTH_USER: ${{secrets.SMOKE_TEST_REVIEW_APP_BASIC_AUTH_USER}}
        SMOKE_TEST_REVIEW_APP_BASIC_AUTH_PASSWORD: ${{secrets.SMOKE_TEST_REVIEW_APP_BASIC_AUTH_PASSWORD}}

      run: |
        mkdir -p tmp/capybara
        bundle exec rspec ./smoke_test/cases_page_spec.rb

    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: capybara screenshots
        path: tmp/capybara/
