name: Tests

on: [push]

env:
  DATABASE_URL: postgres://localhost:5432/psd_test
  ELASTICSEARCH_URL: http://localhost:9200
  REDIS_URL: redis://localhost:6379
  REDIS_HOST: localhost

jobs:
  ruby:
    name: "Ruby"
    runs-on: ubuntu-latest

    # If you need DB like PostgreSQL then define service below.
    # Example for Redis can be found here:
    # https://github.com/actions/example-services/tree/master/.github/workflows
    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: postgres
        ports: ["5432:5432"]
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      elasticsearch:
        image: elasticsearch:6.7.2
        ports: ["9200:9200"]
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
      redis:
        image: redis
        ports:
        - 6379:6379
        options: --entrypoint redis-server

        # needed because the postgres container does not provide a healthcheck
        # options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Set up Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.5.x
    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: 10.16.x
    # required to compile pg ruby gem
    - name: install PostgreSQL client
      run: sudo apt-get install libpq-dev
    - name: install chromedriver
      run: wget https://chromedriver.storage.googleapis.com/2.41/chromedriver_linux64.zip && unzip chromedriver_linux64.zip && sudo mv chromedriver /usr/bin && sudo chmod +x /usr/bin/chromedriver
    - uses: actions/cache@v1
      with:
        path: psd-web/vendor/bundle
        key: ${{ runner.OS }}-gems
        restore-keys: |
          ${{ runner.OS }}-gems
          ${{ runner.OS }}-gems-
          ${{ runner.OS }}-
    - uses: actions/cache@v1
      with:
        path: psd-web/node_modules
        key: ${{ runner.OS }}-node
        restore-keys: |
          ${{ runner.OS }}-node
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
          #    - name: Check gems
          #      run: ls -a psd-web/vendor/bundle
    - name: Install ruby gems
      env:
        PGHOST: localhost
        PGUSER: postgres
        RAILS_ENV: test
      run: |
        cd psd-web
        gem install bundler -v 1.17.3
        bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
    - name: Check gems 2
      run: ls -a psd-web/vendor/bundle
    - name: Install js dependencies
      env:
        PGHOST: localhost
        PGUSER: postgres
        RAILS_ENV: test
      run: |
        cd psd-web
        npm install yarn -g
        yarn install
        bin/webpack
    - name: Prepare db
      env:
        PGHOST: localhost
        PGUSER: postgres
        RAILS_ENV: test
      run: |
        cd psd-web
        bin/rails db:setup
    - name: Run Tests
      env:
        ELASTICSEARCH_URL: localhost
        KEYCLOAK_AUTH_URL: ${{ secrets.KeycloakAuthUrl }}
        KEYCLOAK_CLIENT_ID: ${{ secrets.KeycloakClientId }}
        KEYCLOAK_CLIENT_SECRET: ${{ secrets.KeycloakClientSecret }}
        # KEYCLOAK_USER_ID: ${{ secrets.KeycloakUserId }}
        # KEYCLOAK_POISON_CENTER_USER_ID: ${{ secrets.KeycloakPoisonCenterUserId }}
        # KEYCLOAK_USER_PASSWORD: ${{ secrets.KeycloakUserPassword }}
        PGHOST: localhost
        PGUSER: postgres
        RAILS_ENV: test
      run: |
        cd psd-web
        bundle exec rake test:all
        #     - name: Run Specs
        #       env:
        #         ELASTICSEARCH_URL: localhost
        #         KEYCLOAK_AUTH_URL: ${{ secrets.KeycloakAuthUrl }}
        #         KEYCLOAK_CLIENT_ID: ${{ secrets.KeycloakClientId }}
        #         KEYCLOAK_CLIENT_SECRET: ${{ secrets.KeycloakClientSecret }}
        #         # KEYCLOAK_USER_ID: ${{ secrets.KeycloakUserId }}
        #         # KEYCLOAK_POISON_CENTER_USER_ID: ${{ secrets.KeycloakPoisonCenterUserId }}
        #         # KEYCLOAK_USER_PASSWORD: ${{ secrets.KeycloakUserPassword }}
        #         PGHOST: localhost
        #         PGUSER: postgres
        #         RAILS_ENV: test
        #       run: |
        #         cd psd-web
        #         bundle exec rspec spec
