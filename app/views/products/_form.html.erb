<% label_class = "govuk-label--m" %>

<%= govukSelect(
  formGroup: { classes: class_names("govuk-form-group--error" => product_form.errors[:category].any?) },
  choices: product_categories,
  key: :category,
  form: form,
  show_all_values: true,
  id: "category",
  aria_describedby: "report-product-category-hint",
  is_autocomplete: true,
  label: { text: "Product category", classes: label_class },
  hint: { text: "COVID-19 categories added: ‘PPE’ and ‘Hand sanitiser’" }
) %>

<%= govukInput(
  key: :subcategory,
  form: form,
  id: "subcategory",
  classes: "app-!-max-width-one-half",
  label: { text: "Product subcategory", classes: label_class },
  hint: { text: "For example, ‘Face mask’ or ‘Washing machine’" }
) %>

<%= form.govuk_radios :authenticity, legend: "Is the product counterfeit?", items: items_for_authenticity(product_form) %>

<% product_marking_fields = capture do %>
  <%= form.govuk_checkboxes :markings,
                            legend: "Select product marking",
                            legend_classes: "govuk-fieldset__legend--s",
                            items: Product::MARKINGS.map { |value| { text: value, value: value, disable_ghost: true} } %>
<% end %>

<%= form.govuk_radios :has_markings,
  legend: "Does the product have UKCA, UKNI, or CE marking?",
  items: [
    { text: "Yes", value: "markings_yes", conditional: { html: product_marking_fields } },
    { text: "No", value: "markings_no" },
    { text: "Unknown", value: "markings_unknown" }
  ]
%>


<%= form.govuk_radios :affected_units_status, legend: "How many units are affected?", items: items_for_affected_units(product_form, form) %>

<%= govukInput(
  key: :brand,
  form: form,
  classes: "app-!-max-width-one-half",
  label: { text: "Product brand (if branded)", classes: label_class },
  hint: { text: "For example, ‘Dyson’ or ‘Sony’" }
) %>


<%= govukInput(
  key: :name,
  form: form,
  classes: "app-!-max-width-three-quarters",
  label: { text: "Product name", classes: label_class },
  id: "name",
  hint: { text: "Include model name and model number, for example ‘PlayStation 5’" }
) %>

<%= form.govuk_radios :when_placed_on_market, legend: "Was the product placed on the market before 1 January 2021?", items: items_for_before_2021_radio(product_form) %>

<%= govukInput(
  key: :barcode,
  id: "barcode",
  form: form,
  classes: "app-!-max-width-one-half",
  label: { text: "Barcode number (GTIN, EAN or UPC)", classes: label_class },
  hint: {text: "Normally 8, 12, or 13 digits"}
) %>


<%= govukInput(
  key: :batch_number,
  form: form,
  classes: "app-!-max-width-one-half",
  label: { text: "Batch number", classes: label_class }
) %>

<%= govukTextarea(
  key: :product_code,
  form: form,
  classes: "app-!-max-width-one-half",
  label: { text: "Other product identifiers", classes: label_class },
  hint: { text: "For example, serial number, Amazon ID (ASIN) or eBay ID. Use a comma to separate multiple identifiers, and a hyphen to indicate ranges." }
) %>

<%= govukInput(
  key: :webpage,
  form: form,
  classes: "app-!-max-width-three-quarters",
  label: { text: "Webpage", classes: label_class },
  hint: { text: "The manufacturer’s page for the product, or a link to where it can be bought" }
) %>

<%= govukSelect(
  form: form,
  key: :country_of_origin,
  formGroup: { classes: "app-!-autocomplete--max-width-one-half" },
  items: options_for_country_of_origin(countries, product_form),
  include_blank: true,
  id: "location-autocomplete",
  label: { text: "Country of origin", classes: label_class },
  hint: { text: "Where the product was manufactured" }
) %>

<%= govukInput(
  key: :customs_code,
  form: form,
  classes: "app-!-max-width-three-quarters",
  label: { text: "Customs code", classes: label_class },
  hint: { text: "For example, CN code (8 digits) or TARIC code (10 digits). Use a comma to separate multiple codes" }
) %>

<%= govukTextarea(
  key: :description,
  form: form,
  attributes: { maxlength: 10_000 },
  classes: "app-!-max-width-three-quarters",
  label: { text: "Description of product", classes: label_class },
  hint: { text: "Details about the product you haven’t included above. For example, colour, size, packaging description. You don’t need to include details of damage or incidents" }
) %>

<%= form.submit local_assigns[:submit_text] || "Save product", class: "govuk-button" %>
