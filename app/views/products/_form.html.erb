<% label_class = "govuk-label--m" %>

<%= govukSelect(
  formGroup: { classes: class_names("govuk-form-group--error" => product_form.errors[:category].any?) },
  choices: product_categories,
  key: :category,
  form: form,
  show_all_values: true,
  include_blank: true,
  id: "category",
  aria_describedby: "report-product-category-hint",
  label: { text: "Product category", classes: label_class },
  hint: { text: "The product category will be permanent for this product record", classes: "govuk-!-font-size-16" },
  attributes: { disabled: local_assigns[:disable_permanent_fields] }
) %>

<%= govukInput(
  key: :subcategory,
  form: form,
  id: "subcategory",
  label: { text: "Product subcategory", classes: label_class },
  hint: { text: "For example, 'Face mask' or 'Washing machine'" }
) %>

<% if product_form.authenticity_unsure? %>
  <fieldset class="govuk-fieldset">
    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">Is the product counterfeit?</legend>
    <p class="govuk-body">The original record was recorded as 'unsure'</p>
  </fieldset>
<% else %>
  <%= form.govuk_radios :authenticity,
                        legend: "Is the product counterfeit?",
                        hint: { text: local_assigns[:disable_permanent_fields] ? "The counterfeit status will be permanent for this product record. You can create an alternative product record if required" : "The counterfeit status will be permanent for this product record. You can create the product record later, or create an alternative product record when required", classes: "govuk-!-font-size-16" },
                        items: conditionally_disabled_items_for_authenticity(product_form, disable_all_items: local_assigns[:disable_permanent_fields]) %>
<% end %>

<% product_marking_fields = capture do %>
  <%= form.govuk_checkboxes :markings,
                            legend: "Select product marking",
                            legend_classes: "govuk-fieldset__legend--s",
                            items: Product::MARKINGS.map { |value| { text: value, value: value, disable_ghost: true} } %>
<% end %>

<%= form.govuk_radios :has_markings,
  legend: "Does the product have UKCA, UKNI, or CE marking?",
  items: [
    { text: "Yes", value: "markings_yes", conditional: { html: product_marking_fields } },
    { text: "No", value: "markings_no" },
    { text: "Unknown", value: "markings_unknown" }
  ]
%>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-full">
    <%= opss_aside title: "Number of units affected?", text: "The number of units affected is case related data (and has now moved to the case page).", classes: "govuk-!-margin-top-5 govuk-!-margin-bottom-9" %>
  </div>
</div>

<%= govukInput(
  key: :brand,
  form: form,
  label: { text: "Manufacturer's brand name", classes: label_class },
  hint: { html: 'For example, Dyson or Sony<span class="govuk-visually-hidden">.</span><br><span class="govuk-!-font-size-16">The manufacturer\'s brand name will be permanent for this product record</span>'.html_safe },
  attributes: { disabled: local_assigns[:disable_permanent_fields] }
) %>

<%= govukInput(
  key: :name,
  form: form,
  label: { text: "Product name", classes: label_class },
  id: "name",
  hint: { html: 'Include model name and model number, for example \'PlayStation 5\'<span class="govuk-visually-hidden">.</span><br><span class="govuk-!-font-size-16">The product name will be permanent for this product record</span>'.html_safe },
  attributes: { disabled: local_assigns[:disable_permanent_fields] }
) %>

<% if !local_assigns[:disable_image_upload] %>
  <%= render "upload_file_component", form: form, old_file: nil, field_name: :image, legend: "Upload a product image", label: "Upload a product image" %>
<% end %>

<%= form.govuk_radios :when_placed_on_market, legend: "Was the product placed on the market before 1 January 2021?", items: items_for_before_2021_radio(product_form) %>

<%= govukInput(
  key: :barcode,
  id: "barcode",
  form: form,
  label: { text: "Barcode number (GTIN, EAN or UPC)", classes: label_class },
  hint: {text: "Normally 8, 12, or 13 digits"}
) %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-full">
    <%= opss_aside title: "Batch numbers", text: "Batch numbers are case related data (and have now moved to the case page).", classes: "govuk-!-margin-top-5 govuk-!-margin-bottom-9" %>
  </div>
</div>

<%= govukTextarea(
  key: :product_code,
  form: form,
  label: { text: "Other product identifiers", classes: label_class },
  hint: { text: "For example, serial number, Amazon ID (ASIN) or eBay ID. Use a comma to separate multiple identifiers, and a hyphen to indicate ranges." }
) %>

<%= govukInput(
  key: :webpage,
  form: form,
  label: { text: "Webpage", classes: label_class },
  hint: { text: "The manufacturer's page for the product, or a link to where it can be bought" }
) %>

<%= govukSelect(
  form: form,
  key: :country_of_origin,
  id: "country_of_origin",
  items: options_for_country_of_origin(countries, product_form),
  include_blank: true,
  label: { text: "Country of origin", classes: label_class },
  hint: { text: "Where the product was manufactured" }
) %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-full">
    <%= opss_aside title: "Customs codes", text: "Customs codes are case related data (and have now moved to the case page).", classes: "govuk-!-margin-top-5 govuk-!-margin-bottom-9" %>
  </div>
</div>

<%= govukTextarea(
  key: :description,
  form: form,
  attributes: { maxlength: 10_000 },
  label: { text: "Description of product", classes: label_class },
  hint: { text: "Details about the product you haven't included above. For example, colour, size, packaging description. Do not include details of damage or incidents" }
) %>

<%= form.hidden_field :notification_pretty_id, value: product_form.notification_pretty_id || params[:notification_pretty_id] %>

<%= form.submit local_assigns[:submit_text] || "Save", class: "govuk-button", data: { cy: "save" } %>
