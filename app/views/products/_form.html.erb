<% label_class = "govuk-label--m" %>

<% category_items = [OpenStruct.new(value: "", text: "")] + product_categories.map{|x| OpenStruct.new(value: x, text: x)}  %>
<%= form.govuk_collection_select :category,
                                 category_items,
                                 :value,
                                 :text,
                                 label: { text: "Product category", size: "m" },
                                 hint: { text: "The product category will be permanent for this product record" } %>
<%= form.govuk_text_field :subcategory, label: { text: 'Product subcategory', size: 'm' }, hint: { text: "For example, 'Face mask' or 'Washing machine'" } %>


<%= form.govuk_text_field :subcategory, label: {text: "Product subcategory"}, hint: { text: "For example, 'Face mask' or 'Washing machine'" } %>

<% if product_form.authenticity_unsure? %>
  <fieldset class="govuk-fieldset">
    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">Is the product counterfeit?</legend>
    <p class="govuk-body">The original record was recorded as 'unsure'</p>
  </fieldset>
<% else %>
  <% counterfeit_radio_items =  conditionally_disabled_items_for_authenticity(product_form, disable_all_items: local_assigns[:disable_permanent_fields]).map{|x| OpenStruct.new(value: x.value, text: x.key)}%>
  <%= form.govuk_collection_radio_buttons :authenticity,
                                          counterfeit_radio_items,
                                          :value,
                                          :text,
                                          legend: {text: "Is the product counterfeit?"},
                                          hint: {text: local_assigns[:disable_permanent_fields] ? "The counterfeit status will be permanent for this product record. You can create an alternative product record if required" : "The counterfeit status will be permanent for this product record. You can create the product record later, or create an alternative product record when required", size: "16"}%>
  <%= conditionally_disabled_items_for_authenticity(product_form, disable_all_items: local_assigns[:disable_permanent_fields]) %>
<% end %>

<% product_marking_fields = capture do %>
  <% markings = Product::MARKINGS.map{|x| OpenStruct.new(value: x, text: x)} %>
  <%= form.govuk_collection_check_boxes :markings,
                                        markings,
                                        :value,
                                        :text,
                                        caption: nil,
                                        legend: {text: "Select product marking"} %>
<% end %>


<%= form.govuk_radio_buttons_fieldset(:has_markings, legend: {text: "Does the product have UKCA, UKNI, or CE marking?"}) do %>
  <%= form.govuk_radio_button :has_markings, 'markings_yes', label: {text: "Yes"} do %>
    <%= product_marking_fields %>
  <%= end %>
  <%= form.govuk_radio_button :has_markings, 'markings_no', label: {text: "No"} %>
  <%= form.govuk_radio_button :has_markings, 'markings_unknown', label: {text: "Unknown"} %>
<% end %>
<div class="govuk-grid-row">
  <div class="govuk-grid-column-full">
    <%= opss_aside title: "Number of units affected?", text: "The number of units affected is notification related data (and has now moved to the notification page).", classes: "govuk-!-margin-top-5 govuk-!-margin-bottom-9" %>
  </div>
</div>


<%= govukInput(
  key: :brand,
  form: form,
  label: { text: "Manufacturer's brand name", classes: label_class },
  hint: { html: 'For example, Dyson or Sony<span class="govuk-visually-hidden">.</span><br><span class="govuk-!-font-size-16">The manufacturer\'s brand name will be permanent for this product record</span>'.html_safe },
  attributes: { disabled: local_assigns[:disable_permanent_fields] }
) %>

<%= form.govuk_text_field :brand,
                          label: {text: "Manufacturer's brand name"},
                          hint: {text: 'For example, Dyson or Sony<span class="govuk-visually-hidden">.</span><br><span class="govuk-!-font-size-16">The manufacturer\'s brand name will be permanent for this product record</span>'.html_safe}
%>

<%= govukInput(
  key: :name,
  form: form,
  label: { text: "Product name", classes: label_class },
  id: "name",
  hint: { html: 'Include model name and model number, for example \'PlayStation 5\'<span class="govuk-visually-hidden">.</span><br><span class="govuk-!-font-size-16">The product name will be permanent for this product record</span>'.html_safe },
  attributes: { disabled: local_assigns[:disable_permanent_fields] }
) %>

<% if !local_assigns[:disable_image_upload] %>
  <%= render "upload_file_component", form: form, old_file: nil, field_name: :image, legend: "Upload a product image", label: "Upload a product image" , hint: "Acceptable file formats: GIF, JPEG, PNG, WEBP or HEIC/HEIF."%>
<% end %>

<%= form.govuk_radios :when_placed_on_market, legend: "Was the product placed on the market before 1 January 2021?", items: items_for_before_2021_radio(product_form) %>

<%= govukInput(
  key: :barcode,
  id: "barcode",
  form: form,
  label: { text: "Barcode number (GTIN, EAN or UPC)", classes: label_class },
  hint: {text: "Normally 8, 12, or 13 digits"}
) %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-full">
    <%= opss_aside title: "Batch numbers", text: "Batch numbers are notification related data (and have now moved to the notification page).", classes: "govuk-!-margin-top-5 govuk-!-margin-bottom-9" %>
  </div>
</div>

<%= govukTextarea(
  key: :product_code,
  form: form,
  label: { text: "Other product identifiers", classes: label_class },
  hint: { text: "For example, serial number, Amazon ID (ASIN) or eBay ID. Use a comma to separate multiple identifiers, and a hyphen to indicate ranges." }
) %>

<%= govukInput(
  key: :webpage,
  form: form,
  label: { text: "Webpage", classes: label_class },
  hint: { text: "The manufacturer's page for the product, or a link to where it can be bought" }
) %>

<%= govukSelect(
  form: form,
  key: :country_of_origin,
  id: "country_of_origin",
  items: options_for_country_of_origin(countries, product_form),
  include_blank: true,
  label: { text: "Country of origin", classes: label_class },
  hint: { text: "Where the product was manufactured" }
) %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-full">
    <%= opss_aside title: "Customs codes", text: "Customs codes are notification related data (and have now moved to the notification page).", classes: "govuk-!-margin-top-5 govuk-!-margin-bottom-9" %>
  </div>
</div>

<%= govukTextarea(
  key: :description,
  form: form,
  attributes: { maxlength: 10_000 },
  label: { text: "Description of product", classes: label_class },
  hint: { text: "Details about the product you haven't included above. For example, colour, size, packaging description. Do not include details of damage or incidents" }
) %>

<%= form.hidden_field :notification_pretty_id, value: product_form.notification_pretty_id || params[:notification_pretty_id] %>

<%= form.submit local_assigns[:submit_text] || "Save", class: "govuk-button", data: { cy: "save" } %>
