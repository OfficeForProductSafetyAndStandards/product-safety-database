<%= page_title I18n.t(".investigations.titles.#{@page_name}") %>

<%= render "investigations/heading/#{@page_name}" %>

<%= form_with(model: @search, scope: "", url: notifications_search_path, method: :get, id: "cases-search-form", html: { role: "search" }) do |form| %>
  <div class="govuk-grid-row opss-full-height">
    <%= render "notifications/filters", search: @search, form: form %>
    <section class="govuk-grid-column-three-quarters" id="page-content">
      <div class="govuk-grid-row">
        <%= render_sort_by(form, @search.sort_by_items(with_relevant_option: false), @search.selected_sort_by, @search.selected_sort_dir, "govuk-grid-column-one-third opss-float-right-desktop") if @submitted_count > 11 %>
      </div>

      <% if @draft_notifications.any? %>
        <%=
          govuk_table(html_attributes: { role: "table" }) do |table|
          if Flipper.enabled?(:submit_notification_reminder)
            table.with_caption(size: "m") do
                  safe_join([
                    "Draft notifications",
                    content_tag(:p, "If a notification remains in a draft status for 90 days it
                    will be automatically deleted. Please submit or delete a draft in the time frame
                    provided to help improve data quality and reporting. The 90 day period is reset
                    if an update is applied to the draft.", class: "govuk-hint")
                  ])
                end
          else
            table.with_caption(
              size: "m",
              text: "Draft notifications"
            )
          end

            table.with_head do |head|
              head.with_row do |row|
                row.with_cell(text: "Product name(s)", html_attributes: { scope: "col" })
                row.with_cell(text: "Notification title", html_attributes: { scope: "col" })
                row.with_cell(text: "Last updated", html_attributes: { scope: "col" })
                row.with_cell(text: "Status", html_attributes: { scope: "col" })
                row.with_cell(text: "Change or Delete", html_attributes: { scope: "col" })
              end
            end

            @draft_notifications.each_with_index do |notification, index|
              table.with_body do |body|
                body.with_row do |row|
                  product_value = notification.investigation_products.decorate.map(&:product).map(&:name_with_brand).presence&.join(", ") || "Not provided"
                  title_value = notification.user_title.presence || "Not provided"
                  updated_value = notification.updated_at.to_formatted_s(:govuk)
                  status_value = "Draft"

                  product_with_header = content_tag(:span, "Product name: ", class: "govuk-visually-hidden") +
                                        sanitize(notification.investigation_products.decorate.map(&:product).map(&:name_with_brand).presence&.join("<br>") || "Not provided", tags: %w(br)).html_safe

                  title_with_header = content_tag(:span, "Notification title: ", class: "govuk-visually-hidden") +
                                      sanitize(title_value)

                  updated_with_header = content_tag(:span, "Last updated: ", class: "govuk-visually-hidden") +
                                        updated_value

                  status_with_header = content_tag(:span, "Status: ", class: "govuk-visually-hidden") +
                                       content_tag(:span, status_value, class: "govuk-tag govuk-tag--grey")

                  make_changes_link = content_tag(:a, "Make changes", href: notification_create_index_path(notification), class: "govuk-link")
                  hr_tag = content_tag(:hr, nil, class: "govuk-section-break govuk-section-break--m govuk-section-break--visible")
                  delete_link = content_tag(:a, "Delete", href: delete_notification_path(notification), class: "govuk-link")

                  actions_with_header = content_tag(:span, "Change or Delete: ", class: "govuk-visually-hidden") +
                                        make_changes_link + hr_tag + delete_link

                  row.with_cell(
                    header: true,
                    text: product_with_header
                  )
                  row.with_cell(
                    text: title_with_header
                  )
                  row.with_cell(
                    text: updated_with_header
                  )
                  row.with_cell(
                    text: status_with_header
                  )
                  row.with_cell(
                    text: actions_with_header
                  )
                end
              end
            end
          end
        %>
        <%= govuk_pagination(pagy: @draft_pagy) %>
      <% end %>

      <% if @submitted_notifications.any? %>
        <%=
          govuk_table(html_attributes: { role: "table" }) do |table|
            table.with_caption(size: "m", text: "Submitted notifications")

            table.with_head do |head|
              head.with_row do |row|
                row.with_cell(text: "Product name(s)", html_attributes: { scope: "col" })
                row.with_cell(text: "Notification title", html_attributes: { scope: "col" })
                row.with_cell(text: "Last updated", html_attributes: { scope: "col" })
                row.with_cell(text: "Status", html_attributes: { scope: "col" })
                row.with_cell(text: "Update", html_attributes: { scope: "col" })
              end
            end

            @submitted_notifications.each_with_index do |notification, index|
              table.with_body do |body|
                body.with_row do |row|
                  product_value = notification.investigation_products.decorate.map(&:product).map(&:name_with_brand).join(", ")
                  title_value = notification.user_title
                  updated_value = notification.updated_at.to_formatted_s(:govuk)
                  status_value = "Submitted #{notification.submitted_at? ? notification.submitted_at.to_formatted_s(:govuk) : "Date not provided"}"

                  product_with_header = content_tag(:span, "Product name: ", class: "govuk-visually-hidden") +
                                        sanitize(notification.investigation_products.decorate.map(&:product).map(&:name_with_brand).join("<br>"), tags: %w(br)).html_safe

                  title_with_header = content_tag(:span, "Notification title: ", class: "govuk-visually-hidden") +
                                      sanitize(title_value)

                  updated_with_header = content_tag(:span, "Last updated: ", class: "govuk-visually-hidden") +
                                        updated_value

                  submitted_tag = content_tag(:span, "Submitted", class: "govuk-tag govuk-tag--green")
                  submitted_date = notification.submitted_at? ? notification.submitted_at.to_formatted_s(:govuk) : "Date not provided"
                  status_with_header = content_tag(:span, "Status: ", class: "govuk-visually-hidden") +
                                       content_tag(:div) do
                                         safe_join([
                                           submitted_tag,
                                           content_tag(:div, submitted_date, class: "govuk-!-margin-top-2")
                                         ])
                                       end

                  update_link = content_tag(:a, "Update notification", href: notification_path(notification), class: "govuk-link")

                  actions_with_header = content_tag(:span, "Update: ", class: "govuk-visually-hidden") + update_link

                  row.with_cell(
                    header: true,
                    text: product_with_header
                  )
                  row.with_cell(
                    text: title_with_header
                  )
                  row.with_cell(
                    text: updated_with_header
                  )
                  row.with_cell(
                    text: status_with_header
                  )
                  row.with_cell(
                    text: actions_with_header
                  )
                end
              end
            end
          end
        %>
        <%= govuk_pagination(pagy: @submitted_pagy) %>
      <% end %>

      <% unless @draft_notifications.any? || @submitted_notifications.any? %>
        <%= render "investigations/no_cases" %>
      <% end %>
    </section>
  </div>
<% end %>
