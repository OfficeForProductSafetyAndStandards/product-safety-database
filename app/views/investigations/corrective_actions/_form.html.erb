<%= form.govuk_radios :action,
legend: "What action is being taken?",
items: corrective_action_summary_radio_items(form) %>

<% two_weeks_from_now =  2.weeks.from_now.to_date %>
<%= form.govuk_date_input :date_decided,
legend: "What date did the action come in to effect?",
hint: "This may be in the future. For example, #{two_weeks_from_now.day} #{two_weeks_from_now.month} #{two_weeks_from_now.year}." %>

<% if allow_product_linking %>
  <%= render "components/govuk_fieldset", legend: { text: "Which product is subject to action?", classes: "govuk-fieldset__legend--m" } do %>
    <div class="govuk-form-group <%= "govuk-form-group--error" if corrective_action.errors[:product].any? %>">
      <% if investigation.products.empty? %>
        <span class="govuk-hint">
          There are no products on this case.
          <br />
          <%= link_to "Add a product", new_investigation_product_path(investigation) %>
          to record a corrective action.
        </span>
      <% elsif  investigation.products.size == 1 %>
        <p class="govuk-body"><%= investigation.products.first.name %></p>
        <%= form.hidden_field :product_id, value: investigation.products.first.id %>
      <% else %>

        <%= form.govuk_select :product_id,
          label: "Product",
          label_classes: "govuk-visually-hidden",
          items: [{text: "", value: ""}] + investigation.products.map { |product| { text: product.name, value: product.id }},
         hint: "Only products already added to the case are listed."
        %>
      <% end %>
    </div>
  <% end %>
<% end %>

<%= render "form_components/govuk_select",
  choices: relevant_legislation,
  key: :legislation,
  form: form,
  is_autocomplete: true,
  show_all_values: true,
  label: { text: "Under which legislation?", classes: "govuk-label--m" }

%>
<% if allow_business_linking %>
  <%= render "components/govuk_fieldset", legend: { text: "Which business is responsible?", classes: "govuk-fieldset__legend--m" } do %>
    <div class="govuk-form-group <%= "govuk-form-group--error" if corrective_action.errors[:business].any? %>">
      <% if investigation.businesses.empty? %>
        <span class="govuk-hint">There are no businesses associated with this case.</span>
      <% else %>
        <%= form.govuk_select :business_id,
            label: "Business",
            label_classes: "govuk-visually-hidden",
            hint: "Only businesses already added to the case are listed.",
            items: [{text: "", value: ""}] + investigation.businesses.map { |business| { text: business.trading_name, value: business.id } }
        %>
      <% end %>
    </div>
  <% end %>
<% end %>

<%= form.govuk_radios :has_online_recall_information,
   legend: t(".has_online_recall_information_legend"),
 items: [
   {
     text: t(".yes"),
     value: :has_online_recall_information_yes,
     conditional: { html: form.govuk_input(:online_recall_information, hint: t(".online_recall_information_hint"), label_classes: "govuk-visually-hidden", label: t(".online_recall_information_label"))},
     checked: form.object.has_online_recall_information&.inquiry&.yes?
   },
   { text: t(".no"), value: :has_online_recall_information_no, checked: form.object.has_online_recall_information&.inquiry&.no? },
   { text: t(".not_relevant"), value: :has_online_recall_information_not_relevant, checked: form.object.has_online_recall_information&.inquiry&.not_relevant? }
 ] %>

<%= form.govuk_radios :measure_type,
   legend: "Is the corrective action mandatory?",
   items: [
     { text: "Yes", value: "mandatory" },
     { text: "No, itâ€™s voluntary", value: "voluntary" }
   ]
%>

<%= form.govuk_radios :duration,
 legend: "How long will the corrective action be in place?",
 items: [
   { text: CorrectiveAction.human_attribute_name("duration.permanent"), value: "permanent" },
   { text: CorrectiveAction.human_attribute_name("duration.temporary"), value: "temporary" },
   { text: CorrectiveAction.human_attribute_name("duration.unknown"), value: "unknown" }
 ]
%>

<%= form.govuk_select :geographic_scope,
         label: "What is the geographic scope of the action?",
         label_classes: "govuk-label govuk-label--m",
         items: [{text: "", value: ""}] + corrective_action_geographic_scope.collect {|geographic_scope| { text: geographic_scope, value: geographic_scope } }
%>


<%= form.govuk_text_area :details,
  label: "Further details (optional)",
  hint: "If you have more information about a corrective action, add it here."
%>
